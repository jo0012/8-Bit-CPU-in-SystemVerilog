module ControlUnit (opcode, key0, f_CU, B_sel_CU, write_a_CU, write_b_CU, write_o_CU);
	// Input
	input logic [3:0] opcode;
	input logic key0;
	
	// Output
	output logic [2:0] f_CU; //
	output logic [1:0] B_sel_CU;//
	output logic write_a_CU; //
	output logic write_b_CU; //
	output logic write_o_CU; //
	output logic write_cz_CU;
	output logic PC_sel_CU;
	output logic write_pc_CU;
						
	
	always @ (key0)
		begin
			case (opcode)
				4'b0000: // No operation
					begin
						f_CU = 3'bxxx; B_sel_CU = 2'bxx; 
						write_a_CU = 1'b0; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b0; PC_sel_CU = 1'b0; write_pc_CU = 1'b0;
					end
					
				4'b0100: // aOutputData_ALU = (Operand value);
					begin
						f_CU = 3'b000; B_sel_CU = 2'b01; 
						write_a_CU = 1'b1; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
						
				4'b0101: // aOutputData_ALU = inputSignal;
					begin
						f_CU = 3'b000; B_sel_CU = 2'b11; 
						write_a_CU = 1'b1; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end	
					
				4'b0101: // y = aInputData_ALU;
					begin
						f_CU = 3'b000; B_sel_CU = 2'bxx; 
						write_a_CU = 1'b0; write_b_CU = 1'b0; write_o_CU = 1'b1;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
						
				4'b0110: // bOutputData_ALU = aOutputData_ALU;
					begin
						f_CU = 3'b001; B_sel_CU = 2'bxx; 
						write_a_CU = 1'b0; write_b_CU = 1'b1; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
					
				4'b1000: // aOutputData_ALU = aInputData_ALU + 1;
					begin
						f_CU = 3'b010; B_sel_CU = 2'bxx; 
						write_a_CU = 1'b1; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
					
				4'b1001: // bOutputData_ALU = bInputData_ALU + 1;
					begin
						f_CU = 3'b011; B_sel_CU = 2'b00; 
						write_a_CU = 1'b0; write_b_CU = 1'b1; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
					
				4'b1010: // aOutputData_ALU = aInputData_ALU + bInputData_ALU;
					begin
						f_CU = 3'b100; B_sel_CU = 2'b00; 
						write_a_CU = 1'b1; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
					
				4'b1011: // aOutputData_ALU = aInputData_ALU - bInputData_ALU;
					begin
						f_CU = 3'b101; B_sel_CU = 2'b00; 
						write_a_CU = 1'b1; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
					
				4'b1100: // aOutputData_ALU = aInputData_ALU & bInputData_ALU;
					begin
						f_CU = 3'b110; B_sel_CU = 2'b00; 
						write_a_CU = 1'b1; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
					
				4'b1101: // aOutputData_ALU = aInputData_ALU | bInputData_ALU;
					begin
						f_CU = 3'b111; B_sel_CU = 2'b00; 
						write_a_CU = 1'b1; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b1; PC_sel_CU = 1'b0; write_pc_CU = 1'b1;
					end
					
				default
					begin
						f_CU = 3'bxxx; B_sel_CU = 2'bxx; 
						write_a_CU = 1'b0; write_b_CU = 1'b0; write_o_CU = 1'b0;
						write_cz_CU = 1'b0; PC_sel_CU = 1'b0; write_pc_CU = 1'b0;
					end
			endcase
		end
	
endmodule
